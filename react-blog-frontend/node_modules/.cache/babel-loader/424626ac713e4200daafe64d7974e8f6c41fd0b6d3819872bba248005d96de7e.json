{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Uilian01\\\\Documents\\\\0_React\\\\react-blog\\\\react-blog\\\\react-blog-frontend\\\\src\\\\components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleUsernameChange = e => setUsername(e.target.value);\n  const handlePasswordChange = e => setPassword(e.target.value);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError(\"\");\n    try {\n      console.log(\"Logging in with:\", {\n        username,\n        password\n      });\n      // Here you would make the API call for login, if necessary\n    } catch (err) {\n      setError(\"Login failed. Please try again.\");\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"username\",\n      children: [\"Username:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"username\",\n        name: \"username\",\n        placeholder: \"Username\",\n        required: true,\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"password\",\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        required: true,\n        value: password,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"login-button\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"signup-text\",\n      children: [\"New to our blog?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/signup\",\n        className: \"signup-link\",\n        children: \"Create an account!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"IbnHA65d8EBZNj60IHbdmcUqu30=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useState","Link","jsxDEV","_jsxDEV","LoginForm","_s","username","setUsername","password","setPassword","error","setError","isLoading","setIsLoading","handleUsernameChange","e","target","value","handlePasswordChange","handleSubmit","preventDefault","console","log","err","onSubmit","children","htmlFor","type","id","name","placeholder","required","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","to","_c","$RefreshReg$"],"sources":["C:/Users/Uilian01/Documents/0_React/react-blog/react-blog/react-blog-frontend/src/components/LoginForm.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoginForm = () => {\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  const handleUsernameChange = (e) => setUsername(e.target.value);\r\n  const handlePasswordChange = (e) => setPassword(e.target.value);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError(\"\");\r\n\r\n    try {\r\n      console.log(\"Logging in with:\", { username, password });\r\n      // Here you would make the API call for login, if necessary\r\n    } catch (err) {\r\n      setError(\"Login failed. Please try again.\");\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label htmlFor=\"username\">\r\n        Username:\r\n        <input\r\n          type=\"text\"\r\n          id=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          required\r\n          value={username}\r\n          onChange={handleUsernameChange}\r\n        />\r\n      </label>\r\n      <label htmlFor=\"password\">\r\n        Password:\r\n        <input\r\n          type=\"password\"\r\n          id=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          required\r\n          value={password}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className=\"login-button\">\r\n        Login\r\n      </button>\r\n      <p className=\"signup-text\">\r\n        New to our blog?{\" \"}\r\n        <Link to=\"/signup\" className=\"signup-link\">\r\n          Create an account!\r\n        </Link>\r\n      </p>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}